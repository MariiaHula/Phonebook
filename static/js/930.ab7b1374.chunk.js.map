{"version":3,"file":"static/js/930.ab7b1374.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = undefined;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frameData, frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    /**\n     * WAAPI animations don't resolve startTime synchronously. But a blocked\n     * thread could delay the startTime resolution by a noticeable amount.\n     * For synching handoff animations with the new Motion animation we want\n     * to ensure startTime is synchronously set.\n     */\n    if (options.syncStart) {\n        animation.startTime = frameData.isProcessing\n            ? frameData.timestamp\n            : document.timeline\n                ? document.timeline.currentTime\n                : performance.now();\n    }\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.5\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...transition,\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                valueTransition.syncStart = true;\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.5\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.5 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_superPropBase","object","property","Object","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","key","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","canHandoff","window","HandoffAppearAnimations","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","i","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_objectWithoutProperties","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","noop","any","Queue","_classCallCheck","order","scheduled","_createClass","process","add","push","index","splice","delete","clear","stepsOrder","_createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","queue","cancel","remove","frameData","createRenderStep","processStep","stepId","processBatch","performance","now","wake","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","frame","cancelFrame","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","_toConsumableArray","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","syncStart","timeline","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getKeyframes","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","collectMotionValues","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","animateChildren","_transition2","_ref3","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","_this$options","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","userAgentContains","string","navigator","userAgent","roundPoint","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","parseCSSVariable","exec","_match","getVariableValue","_parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","_ref12","_ref13","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}